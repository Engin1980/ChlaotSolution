<UserControl x:Class="CopilotModule.CtrInit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Eng.Chlaot.Modules.CopilotModule"
             xmlns:types="clr-namespace:Eng.Chlaot.Modules.CopilotModule.Types"
             xmlns:converters="clr-namespace:Eng.Chlaot.Modules.CopilotModule.Converters"
             xmlns:sct ="clr-namespace:Eng.Chlaot.ChlaotModuleBase.ModuleUtils.StateChecking.StateModel;assembly=ChlaotModuleBase" 
             xmlns:gctr="clr-namespace:Eng.Chlaot.ChlaotModuleBase.ModuleUtils.WPF;assembly=ChlaotModuleBase"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <UserControl.Resources>
    <converters:Int2VisibilityConverter x:Key="Int2VisibilityConverter" />
    <converters:VariableValueConverter x:Key="VariableValueConverter" />
    <converters:VariableHasValueToSolidBrushConverter x:Key="VariableHasValueToSolidBrushConverter" />
    <converters:TextBoxTextIsDoubleToSolidBrushConverter x:Key="TextBoxTextIsDoubleToSolidBrushConverter" />
    <HierarchicalDataTemplate DataType="{x:Type sct:StateCheckDelay}" ItemsSource="{Binding Item}">
      <TextBlock Text="{Binding DisplayString}" />
    </HierarchicalDataTemplate>
    <HierarchicalDataTemplate DataType="{x:Type sct:StateCheckCondition}" ItemsSource="{Binding Items}">
      <TextBlock Text="{Binding DisplayString}" />
    </HierarchicalDataTemplate>
    <DataTemplate DataType="{x:Type sct:StateCheckTrueFalse}">
      <TextBlock Text="{Binding DisplayString}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type sct:StateCheckProperty}">
      <TextBlock Text="{Binding DisplayString}" />
    </DataTemplate>
  </UserControl.Resources>
  <DockPanel DataContext="{Binding Set}">
    <DockPanel DockPanel.Dock="Top">
      <DockPanel DockPanel.Dock="Top">
        <Button x:Name="btnSettings" DockPanel.Dock="Right"
                Margin="8" Padding="8" Click="btnSettings_Click">Settings</Button>
        <Button x:Name="btnLoadChecklistFile" 
              Click="btnLoadChecklistFile_Click"
              Margin="8" Padding="8">Load CoPilot Speeches XML file</Button>
      </DockPanel>
      <TabControl>
        <TabItem Header="Metainfo">
          <gctr:MetaInfoPanel DataContext="{Binding MetaInfo}" />
        </TabItem>
        <TabItem Header="Variables">
          <ListView ItemsSource="{Binding SpeechDefinitions}"
                    ItemContainerStyle="{StaticResource ListViewAlternatingStyle}" AlternationCount="2">
            <ListView.Template>
              <ControlTemplate>
                <ScrollViewer>
                  <ItemsPresenter></ItemsPresenter>
                </ScrollViewer>
              </ControlTemplate>
            </ListView.Template>
            <ListView.ItemTemplate>
              <DataTemplate>
                <StackPanel Visibility="{Binding Variables.Count, Converter={StaticResource Int2VisibilityConverter}}"
                            Orientation="Horizontal">
                  <Label Content="{Binding Title}" Width="350" />
                  <ItemsControl ItemsSource="{Binding Variables}">
                    <ItemsControl.ItemTemplate>
                      <DataTemplate>
                        <Label>
                          <StackPanel Orientation="Horizontal" ToolTip="{Binding Description}">
                            <TextBlock Text="{}{" />
                            <TextBlock Text="{Binding Name}" />
                            <TextBlock Text="} = " />
                            <TextBox TextAlignment="Right" Margin="0" 
                                   Text="{Binding UserOrDefaultValue, 
                                      UpdateSourceTrigger=PropertyChanged, 
                                      Converter={StaticResource VariableValueConverter}}"
                                   Background="{Binding RelativeSource={RelativeSource Self}, Path=Text,
                                      Converter={StaticResource TextBoxTextIsDoubleToSolidBrushConverter}}"
                                   Width="50" />
                            <TextBlock Text=" ( default = " />
                            <TextBlock Text="{Binding DefaultValue}" />
                            <TextBlock Text=")" />
                          </StackPanel>
                        </Label>
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                </StackPanel>
              </DataTemplate>
            </ListView.ItemTemplate>
          </ListView>
        </TabItem>
        <TabItem Header="Speeches">
          <ListView ItemsSource="{Binding SpeechDefinitions}"
            ItemContainerStyle="{StaticResource ListViewAlternatingStyle}" AlternationCount="2">
            <ListView.Template>
              <ControlTemplate>
                <ScrollViewer>
                  <ItemsPresenter></ItemsPresenter>
                </ScrollViewer>
              </ControlTemplate>
            </ListView.Template>
            <ListView.ItemTemplate>
              <DataTemplate>
                <StackPanel x:Name="pnlSpeech" MouseRightButtonDown="pnlSpeech_MouseRightButtonDown" Tag="{Binding}" >
                  <Label Content="{Binding Title}" />
                  <Label Margin="32 0 0 0">
                    <Label.Content>
                      <StackPanel Orientation="Horizontal">
                        <TextBlock Width="150" Text="Speech: " />
                        <TextBlock Text="{Binding Speech.Value}" />
                        <TextBlock Text="// " Margin="48 0 0 0" />
                        <TextBlock Text="{Binding Speech.Type}" />
                        <TextBlock Text=" //" />
                      </StackPanel>
                    </Label.Content>
                  </Label>
                  <Label Margin="32 0 0 0">
                    <Label.Content>
                      <StackPanel Orientation="Horizontal">
                        <TextBlock Width="150" Text="When: " />
                        <TreeView ItemsSource="{Binding __WhenCollection}" />
                      </StackPanel>
                    </Label.Content>
                  </Label>
                  <Label Margin="32 0 0 0">
                    <Label.Content>
                      <StackPanel Orientation="Horizontal">
                        <TextBlock Width="150" Text="Reactivate when: " />
                        <TreeView ItemsSource="{Binding __ReactivateWhenCollection}" />
                      </StackPanel>
                    </Label.Content>
                  </Label>
                </StackPanel>
              </DataTemplate>
            </ListView.ItemTemplate>
          </ListView>
        </TabItem>
      </TabControl>
    </DockPanel>
  </DockPanel>
</UserControl>
