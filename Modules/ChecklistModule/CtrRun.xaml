<UserControl x:Class="ChecklistModule.CtrRun"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Eng.Chlaot.Modules.ChecklistModule"
             xmlns:types="clr-namespace:Eng.Chlaot.Modules.ChecklistModule.Types"
             xmlns:vm="clr-namespace:Eng.Chlaot.Modules.ChecklistModule.Types.VM"
             xmlns:converters="clr-namespace:Eng.Chlaot.Modules.ChecklistModule.Converters"
             mc:Ignorable="d" 
             x:Name="ctrRun"
             d:DesignHeight="450" d:DesignWidth="800">
  <UserControl.Resources>
    <converters:RunStateToSolidBrushColorConverter x:Key="RunStateToSolidBrushColorConverter" />
    <converters:RunStateToTreeNodeExpandedConverter x:Key="RunStateToTreeNodeExpandedConverter" />
  </UserControl.Resources>
  <TabControl >
    <TabItem Header="Checklist content">
      <TreeView ItemsSource="{Binding CheckListVMs}" x:Name="tvwTree">
        <TreeView.ItemContainerStyle>
          <Style TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding RunTime.State, Converter={StaticResource RunStateToTreeNodeExpandedConverter}}"/>
          </Style>
        </TreeView.ItemContainerStyle>
        <TreeView.Resources>
          <HierarchicalDataTemplate DataType="{x:Type vm:CheckListVM}" ItemsSource="{Binding Items}">
            <Label x:Name="lblChecklist" Margin="0" Padding="0" 
                    Background="{Binding RunTime.State, Converter={StaticResource RunStateToSolidBrushColorConverter}}">
              <Label.Content>
                <StackPanel Orientation="Horizontal" >
                  <TextBlock Text="{Binding CheckList.CallSpeech}" />
                  <TextBlock Text=" (" />
                  <TextBlock Text="{Binding CheckList.Id}" />
                  <TextBlock Text=")" />
                </StackPanel>
              </Label.Content>
            </Label>
          </HierarchicalDataTemplate>
          <HierarchicalDataTemplate DataType="{x:Type vm:CheckItemVM}">
            <Label x:Name="lblItem" Margin="0" Padding="0" 
                    Background="{Binding RunTime.State, Converter={StaticResource RunStateToSolidBrushColorConverter}}">
              <Label.Content>
                <StackPanel Orientation="Horizontal">
                  <TextBlock Text="{Binding CheckItem.Call.Value}" />
                  <TextBlock Text=" => " />
                  <TextBlock Text="{Binding CheckItem.Confirmation.Value}" />
                </StackPanel>
              </Label.Content>
            </Label>
          </HierarchicalDataTemplate>
        </TreeView.Resources>
      </TreeView>
    </TabItem>
    <TabItem Header="Property Values">
      <DataGrid ItemsSource="{Binding PropertyValuesVM}" AutoGenerateColumns="False">
        <DataGrid.Columns>
          <DataGridTextColumn Header="SimProperty" Binding="{Binding Key}" />
          <DataGridTextColumn Header="Value" Binding="{Binding Value}" />
        </DataGrid.Columns>
      </DataGrid>
    </TabItem>
    <TabItem Header="Variable Values">
      <ListView ItemsSource="{Binding CheckListVMs}">
        <ListView.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="{Binding CheckList.CallSpeech}" Width="200" />
              <ItemsControl ItemsSource="{Binding Variables}">
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                      <TextBlock Text="{Binding Key}" />
                      <TextBlock Text=" = " />
                      <TextBlock Text="{Binding Value}" />
                    </StackPanel>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </StackPanel>
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>
    </TabItem>
    <TabItem Header="Eval Debug">
      <DockPanel>
        <DockPanel DockPanel.Dock="Top">
          <Label DockPanel.Dock="Left">Checklist:</Label>
          <!--<ComboBox ItemsSource="{Binding CheckListVMs}" DisplayMemberPath="CheckList.CallSpeech" SelectedItem="{Binding EvaluatorRecentResultChecklistVM}" />-->
          <ComboBox ItemsSource="{Binding CheckListVMs}" SelectedItem="{Binding EvaluatorRecentResultChecklistVM}">
            <ComboBox.ItemTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <TextBlock Text="{Binding CheckList.CallSpeech}" />
                  <TextBlock Text="{Binding RunTime.IsActivePostfixString}" />
                </StackPanel>
              </DataTemplate>
            </ComboBox.ItemTemplate>
          </ComboBox>
        </DockPanel>
        <StackPanel>
          <Label>
            <StackPanel Orientation="Horizontal">
              <TextBlock Text="Last refresh:" />
              <TextBlock Text="{Binding EvaluatorRecentResultChecklistVM.RunTime.EvaluatorRecentResultDateTime}" />
            </StackPanel>
          </Label>
          <DataGrid ItemsSource="{Binding EvaluatorRecentResultChecklistVM.RunTime.EvaluatorRecentResultVM}" AutoGenerateColumns="False" >
            <DataGrid.Columns>
              <DataGridTemplateColumn Header="Condition">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <TextBlock MaxWidth="250" TextWrapping="Wrap" FontSize="12" Text="{Binding StateCheckItem.DisplayString}" />
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
              <DataGridCheckBoxColumn Header="True?" Binding="{Binding Result}" />
              <DataGridTextColumn Header="Note" Binding="{Binding Note}" />
            </DataGrid.Columns>
          </DataGrid>
        </StackPanel>
      </DockPanel>
    </TabItem>
  </TabControl>
</UserControl>
